syntax = "proto3";

package lane.logic;
option go_package = "laneIM/proto/logic;logic";
import "proto/msg/msg.proto";

message NoResp {}

message SetOnlineReq {
  int64 userid = 1;
  string server = 2;
}
message SetOnlineResp {}

message SetOnlineBatchReq {
  repeated int64 userid = 1;
  string server = 2;
}
message SetOnlineBatchResp {}

message SetOfflineReq {
  int64 userid = 1;
  string server = 2;
}

message JoinRoomReq {
  int64 userid = 1;
  int64 roomid = 3;
}
message JoinRoomBatchReq {
  repeated int64 userid = 1;
  repeated int64 roomid = 3;
}

message QuitRoomReq {
  int64 userid = 1;
  int64 roomid = 2;
}

message QueryRoomReq { repeated int64 userid = 1; }

message QueryRoomResp {
  message RoomSlice { repeated int64 roomid = 1; }
  repeated RoomSlice roomids = 1;
}

message QueryServerReq { repeated int64 userid = 1; }

message QueryServerResp {
  message UserInfoResp {
    bool online = 1;
    // userinfo的设备可以设置成-1，然后查询所有设备所在服务器id
    repeated string serverAddrs = 2;
  }
  repeated UserInfoResp userinfoResp = 1;
}

message NewUserReq {}
message NewUserResp { int64 userid = 1; }

message NewUserBatchReq { int64 count = 1; }
message NewUserBatchResp { repeated int64 userid = 1; }

message NewRoomReq {
  int64 userid = 1;
  string cometAddr = 2;
}
message NewRoomResp { int64 roomid = 1; }

message DelUserReq { int64 userid = 1; }

message AuthReq {
  repeated string params = 1;
  int64 userid = 2;
  string cometAddr = 3;
}

message AuthResp { bool pass = 1; }

service logic {
  rpc SendMsg(lane.msg.SendMsgReq) returns (NoResp);
  rpc SendMsgBatch(lane.msg.SendMsgBatchReq) returns (NoResp);

  rpc SetOnline(SetOnlineReq) returns (NoResp);
  rpc SetOnlineBatch(SetOnlineBatchReq) returns (NoResp);

  rpc SetOffline(SetOfflineReq) returns (NoResp);

  rpc NewUser(NewUserReq) returns (NewUserResp);
  rpc NewUserBatch(NewUserBatchReq) returns (NewUserBatchResp);

  rpc DelUser(DelUserReq) returns (NoResp);

  rpc NewRoom(NewRoomReq) returns (NewRoomResp);

  rpc JoinRoom(JoinRoomReq) returns (NoResp);
  rpc JoinRoomBatch(JoinRoomBatchReq) returns (NoResp);

  rpc QuitRoom(QuitRoomReq) returns (NoResp);
  rpc QueryRoom(QueryRoomReq) returns (QueryRoomResp);

  rpc QueryServer(QueryServerReq) returns (QueryServerResp);

  rpc Auth(AuthReq) returns (AuthResp);
}
