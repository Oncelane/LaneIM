syntax = "proto3";

package lane.logic;
option go_package = "laneIM/proto/logic;logic";
import "proto/msg/msg.proto";

message SingleReq {
  int64 userid = 1;
  int64 roomid = 2;
  lane.msg.Msg msg = 3;
}

message SingleResp {}

message BrodcastReq { lane.msg.Msg msg = 1; }

message BrodcastResp {}

message BrodcastRoomReq {
  int64 roomid = 1;
  int64 userid = 2;
  lane.msg.Msg msg = 3;
}

message BrodcastRoomResp {}

message NoResp {}

message SetOnlineReq {
  int64 roomid = 1;
  int64 userid = 2;
}

message SetOnlineResp {}

message RoomReq { int64 roomid = 1; }

message UserInfo {
  int64 userid = 1;
  bool online = 2;
}

message RoomResp { repeated UserInfo userinfos = 1; }

message SetOfflineReq { int64 userid = 1; }

message JoinRoomReq {
  int64 userid = 1;
  int64 roomid = 2;
}

message QuitRoomReq {
  int64 userid = 1;
  int64 roomid = 2;
}

service logic {
  rpc Single(SingleReq) returns (NoResp);
  rpc Brodcast(BrodcastReq) returns (NoResp);
  rpc BrodcastRoom(BrodcastRoomReq) returns (NoResp);

  rpc SetOnline(SetOnlineReq) returns (NoResp);
  rpc SetOffline(SetOfflineReq) returns (NoResp);

  rpc JoinRoom(JoinRoomReq) returns (NoResp);
  rpc QuitRoom(QuitRoomReq) returns (NoResp);

  rpc Room(RoomReq) returns (RoomResp);
}
